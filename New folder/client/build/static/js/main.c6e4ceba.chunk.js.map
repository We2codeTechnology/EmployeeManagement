{"version":3,"sources":["Mycomponent/salary.js","Mycomponent/common/nav.js","App.js","reportWebVitals.js","index.js"],"names":["ExpandedComponent","_ref","data","react_default","a","createElement","className","staff_name","gender","city","address","moment","dob","format","Salarylist","props","_useState","useState","_useState2","Object","slicedToArray","salaryList","setsalaryList","_useState3","_useState4","attendmonth","setattendmonth","firstdate","startOf","lastdate","endOf","getEmployees","Axios","get","concat","then","response","useEffect","salarygenereate","e","staffidd","target","value","localStorage","setItem","navigator","columns","name","selector","row","id","sortable","salary","total","onClick","undefined","useNavigate","Fragment","role","react_router_dom","to","index_esm","decmonth","subtract","add","index_cjs_default","pagination","expandableRows","expandableRowsComponent","Navv","react_router","path","element","App","nav","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"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","file":"static/js/main.c6e4ceba.chunk.js","sourcesContent":["import { Link, useNavigate } from \"react-router-dom\";\r\nimport DataTable from 'react-data-table-component';\r\nimport {  useState } from 'react';\r\nimport Axios from 'axios';\r\nimport moment from \"moment\";\r\nimport React,{useEffect} from \"react\";\r\nimport { BsFillCaretLeftFill } from \"react-icons/bs\";\r\nimport { BsFillCaretRightFill } from \"react-icons/bs\";\r\n\r\nconst ExpandedComponent = ({ data }) => <div className=\"dropdown_detail\">\r\n<div className=\"dropdown_personaldet\">\r\n<h6 className=\"datastaffname\">{data.staff_name}</h6>\r\n<h6 className=\"mx-3\">{data.gender}</h6>\r\n<h6>{data.city}</h6>\r\n</div>\r\n<div className=\"dropdown_personaldetail\">\r\n<h6 className=\"datastaffname\">{data.address}</h6>\r\n<h6>{moment(data.dob).format('DD-MMMM-YYYY')}</h6>\r\n</div>\r\n</div>;\r\nfunction Salarylist(props) {\r\n  const [salaryList, setsalaryList] = useState([]);\r\n  const [attendmonth, setattendmonth] = useState(\r\n    moment().format(`YYYY-MM-DDT00:00:00+00:00`)\r\n  );\r\n  const PreviousmonthChange = () => {\r\n    let decmonth = moment(attendmonth)\r\n      .subtract(1, \"month\")\r\n      .format(`YYYY-MM-DDT00:00:00+00:00`);\r\n    getEmployees();\r\n    setattendmonth(decmonth);\r\n   \r\n  };\r\n\r\n  const NextmonthChange = () => {\r\n    let decmonth = moment(attendmonth)\r\n      .add(1, \"month\")\r\n      .format(`YYYY-MM-DDT00:00:00+00:00`);\r\n\r\n    getEmployees();\r\n    setattendmonth(decmonth);\r\n \r\n  };\r\n\r\n\r\n  let firstdate = moment(attendmonth, \"YYYY-MM\")\r\n    .startOf(\"month\")\r\n    .format(`YYYY-MM-DDT00:00:00+00:00`);\r\n  let lastdate = moment(attendmonth, \"YYYY-MM\")\r\n    .endOf(\"month\")\r\n    .format(`YYYY-MM-DDT00:00:00+00:00`);\r\n  const getEmployees = () => {\r\n   \r\n    Axios.get(`https://apnaorganicstore.in/index/salary/${firstdate}/${lastdate}`).then((response) => {\r\n      setsalaryList(response.data);\r\n    });\r\n  \r\n  };\r\n  useEffect(() => {\r\n    getEmployees();\r\n  });\r\n  const salarygenereate =(e)=>{\r\n    // let arr = e.target.value.split(',')\r\n  let staffidd = e.target.value;\r\n  localStorage.setItem('staffid',staffidd);\r\n  navigator('/GenerateSalary')\r\n  }\r\n \r\n  // let ageSum = 0\r\n  // for (let i = 0; i <= salaryList.length; i++) {\r\n  //   ageSum += salaryList[i].salary\r\n  // }\r\n  // console.log(\"ageSum------4444444------\"+ageSum);\r\n\r\n  const columns = [\r\n    {\r\n      name: 'Id',\r\n      selector: row => row.id,\r\n      sortable: true,\r\n  },\r\n \r\n    {\r\n        name: 'Staff Name',\r\n        selector: row => row.staff_name,\r\n        sortable: true,\r\n    },\r\n    {\r\n      \r\n        name: 'Salary',\r\n        selector: row => row.salary,\r\n        sortable: true,\r\n    },\r\n    {\r\n      name: 'Current Salary',\r\n      selector: row => row.total,\r\n      sortable: true,\r\n  },\r\n    {\r\n      name: 'Action',\r\n      selector: row => <button className=\"btn btn-sm btn-outline-secondary\" value={row.id} onClick={(row.salary === null || row.salary === 0 || row.salary === '0') \r\n      // && row.total != null || row.total != ''\r\n       ?  {undefined}\r\n      :salarygenereate}>{(row.total === null || row.total === '' || row.total === '0')  ? 'Generate salary' : 'Generated'}</button>,\r\n      sortable: false,\r\n\r\n  },\r\n];\r\nconst navigator=useNavigate();\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n        {/* <Header/> */}\r\n      <div className=\"container-fluid\">\r\n\r\n        <div className=\"row\">\r\n          {/* <Sidebar/> */}\r\n\r\n          <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4 salarylistbox_table\">\r\n            <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom salarylistbody_table\">\r\n              <h1 className=\"h1\"><b>Salary Management</b></h1>\r\n              <div className=\"btn-toolbar mb-2 mb-md-0\">\r\n                <div className=\"btn-group mr-2\">\r\n                <Link to='/Salary_history' className=\"nav-link\">\r\n\r\n                  <button className=\"btn btn-sm btn-outline-secondary\">Salary Summary</button>\r\n                </Link>\r\n                 \r\n                </div>\r\n                \r\n              </div>\r\n            </div>\r\n           \r\n            \r\n\r\n            <div className=\"monthname_sort \">\r\n                  <BsFillCaretLeftFill onClick={PreviousmonthChange} />\r\n                  <h4 className=\"monthname_text\">\r\n                    {moment(attendmonth).format(\"MMMM-YYYY\")}\r\n                  </h4>\r\n                  <BsFillCaretRightFill onClick={NextmonthChange} />\r\n                </div>\r\n            <DataTable\r\n            columns={columns}\r\n            data={salaryList}\r\n            pagination\r\n            expandableRows\r\n            expandableRowsComponent={ExpandedComponent}\r\n          \r\n        />\r\n          </main>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Salarylist;","import React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport Salarylist from \"../salary\";\r\n\r\n\r\nfunction Navv(props) {\r\n\r\n  return (\r\n    <div>\r\n      <Routes>\r\n\r\n<>\r\n\r\n<Route path=\"/EmployeeManagement/\" element={<Salarylist/>} />\r\n     \r\n\r\n\r\n</>\r\n\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navv;","import React from 'react';\r\nimport './App.css';\r\nimport Navv from './Mycomponent/common/nav';\r\n\r\n\r\n\r\n// import Dashboard from './Mycomponent/dashboard';\r\n// import Salary from './Mycomponent/salary';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <Dashboard/>\r\n      <Salary/> */}\r\n      <Navv/>\r\n   \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router} from 'react-router-dom';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  \r\n     <Router> \r\n    <App />\r\n     </Router> \r\n \r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}