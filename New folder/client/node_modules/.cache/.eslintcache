[{"C:\\Users\\User\\Desktop\\emp new\\EmployeeManagement\\New folder\\client\\src\\index.js":"1","C:\\Users\\User\\Desktop\\emp new\\EmployeeManagement\\New folder\\client\\src\\App.js":"2","C:\\Users\\User\\Desktop\\emp new\\EmployeeManagement\\New folder\\client\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\emp new\\EmployeeManagement\\New folder\\client\\src\\Mycomponent\\salary.js":"4","C:\\Users\\User\\Desktop\\emp new\\EmployeeManagement\\New folder\\client\\src\\Mycomponent\\common\\nav.js":"5","C:\\Users\\User\\Desktop\\emp new\\EmployeeManagement\\New folder\\client\\src\\Mycomponent\\dashboard.js":"6"},{"size":607,"mtime":1664512045747,"results":"7","hashOfConfig":"8"},{"size":339,"mtime":1664518767952,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1664512045748,"results":"10","hashOfConfig":"8"},{"size":4898,"mtime":1664517007084,"results":"11","hashOfConfig":"8"},{"size":520,"mtime":1664518745716,"results":"12","hashOfConfig":"8"},{"size":667,"mtime":1664512045746,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qn2zhv",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"C:\\Users\\User\\Desktop\\emp new\\EmployeeManagement\\New folder\\client\\src\\index.js",[],[],"C:\\Users\\User\\Desktop\\emp new\\EmployeeManagement\\New folder\\client\\src\\App.js",[],[],"C:\\Users\\User\\Desktop\\emp new\\EmployeeManagement\\New folder\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\User\\Desktop\\emp new\\EmployeeManagement\\New folder\\client\\src\\Mycomponent\\salary.js",["35","36","37","38","39"],[],"\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Nav } from 'react-bootstrap';\r\nimport DataTable from 'react-data-table-component';\r\nimport {  useState } from 'react';\r\nimport Axios from 'axios';\r\nimport moment from \"moment\";\r\nimport React,{useEffect} from \"react\";\r\nimport { BsFillCaretLeftFill } from \"react-icons/bs\";\r\nimport { BsFillCaretRightFill } from \"react-icons/bs\";\r\n\r\nconst ExpandedComponent = ({ data }) => <div className=\"dropdown_detail\">\r\n<div className=\"dropdown_personaldet\">\r\n<h6 className=\"datastaffname\">{data.staff_name}</h6>\r\n<h6 className=\"mx-3\">{data.gender}</h6>\r\n<h6>{data.city}</h6>\r\n</div>\r\n<div className=\"dropdown_personaldetail\">\r\n<h6 className=\"datastaffname\">{data.address}</h6>\r\n<h6>{moment(data.dob).format('DD-MMMM-YYYY')}</h6>\r\n</div>\r\n</div>;\r\nfunction Salary_list(props) {\r\n  const [employeeList, setEmployeeList] = useState([]);\r\n  const [salaryList, setsalaryList] = useState([]);\r\n  const [attendmonth, setattendmonth] = useState(\r\n    moment().format(`YYYY-MM-DDT00:00:00+00:00`)\r\n  );\r\n  const PreviousmonthChange = () => {\r\n    let decmonth = moment(attendmonth)\r\n      .subtract(1, \"month\")\r\n      .format(`YYYY-MM-DDT00:00:00+00:00`);\r\n    getEmployees();\r\n    setattendmonth(decmonth);\r\n   \r\n  };\r\n\r\n  const NextmonthChange = () => {\r\n    let decmonth = moment(attendmonth)\r\n      .add(1, \"month\")\r\n      .format(`YYYY-MM-DDT00:00:00+00:00`);\r\n\r\n    getEmployees();\r\n    setattendmonth(decmonth);\r\n \r\n  };\r\n\r\n  // date\r\n \r\n  let momentmonth = moment(attendmonth, \"YYYY-MM\").daysInMonth();\r\n\r\n  let firstdate = moment(attendmonth, \"YYYY-MM\")\r\n    .startOf(\"month\")\r\n    .format(`YYYY-MM-DDT00:00:00+00:00`);\r\n  let lastdate = moment(attendmonth, \"YYYY-MM\")\r\n    .endOf(\"month\")\r\n    .format(`YYYY-MM-DDT00:00:00+00:00`);\r\n  const getEmployees = () => {\r\n   \r\n    Axios.get(`http://localhost:3001/salary/${firstdate}/${lastdate}`).then((response) => {\r\n      setsalaryList(response.data);\r\n    });\r\n  \r\n  };\r\n  useEffect(() => {\r\n    getEmployees();\r\n  }, [attendmonth]);\r\n  const salarygenereate =(e)=>{\r\n    // let arr = e.target.value.split(',')\r\n  let staffidd = e.target.value;\r\n  localStorage.setItem('staffid',staffidd);\r\n  navigator('/GenerateSalary')\r\n  }\r\n \r\n  // let ageSum = 0\r\n  // for (let i = 0; i <= salaryList.length; i++) {\r\n  //   ageSum += salaryList[i].salary\r\n  // }\r\n  // console.log(\"ageSum------4444444------\"+ageSum);\r\n\r\n  const columns = [\r\n    {\r\n      name: 'Id',\r\n      selector: row => row.id,\r\n      sortable: true,\r\n  },\r\n \r\n    {\r\n        name: 'Staff Name',\r\n        selector: row => row.staff_name,\r\n        sortable: true,\r\n    },\r\n    {\r\n      \r\n        name: 'Salary',\r\n        selector: row => row.salary,\r\n        sortable: true,\r\n    },\r\n    {\r\n      name: 'Current Salary',\r\n      selector: row => row.total,\r\n      sortable: true,\r\n  },\r\n    {\r\n      name: 'Action',\r\n      selector: row => <button className=\"btn btn-sm btn-outline-secondary\" value={row.id} onClick={(row.salary === null || row.salary === 0 || row.salary === '0') \r\n      // && row.total != null || row.total != ''\r\n       ?  {undefined}\r\n      :salarygenereate}>{(row.total === null || row.total === '' || row.total === '0')  ? 'Generate salary' : 'Generated'}</button>,\r\n      sortable: false,\r\n\r\n  },\r\n];\r\nconst navigator=useNavigate();\r\n\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n        {/* <Header/> */}\r\n      <div className=\"container-fluid\">\r\n\r\n        <div className=\"row\">\r\n          {/* <Sidebar/> */}\r\n\r\n          <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 pt-3 px-4 salarylistbox_table\">\r\n            <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom salarylistbody_table\">\r\n              <h1 className=\"h1\"><b>Salary Management</b></h1>\r\n              <div className=\"btn-toolbar mb-2 mb-md-0\">\r\n                <div className=\"btn-group mr-2\">\r\n                <Link to='/Salary_history' className=\"nav-link\">\r\n\r\n                  <button className=\"btn btn-sm btn-outline-secondary\">Salary Summary</button>\r\n                </Link>\r\n                 \r\n                </div>\r\n                \r\n              </div>\r\n            </div>\r\n           \r\n            \r\n\r\n            <div className=\"monthname_sort \">\r\n                  <BsFillCaretLeftFill onClick={PreviousmonthChange} />\r\n                  <h4 className=\"monthname_text\">\r\n                    {moment(attendmonth).format(\"MMMM-YYYY\")}\r\n                  </h4>\r\n                  <BsFillCaretRightFill onClick={NextmonthChange} />\r\n                </div>\r\n            <DataTable\r\n            columns={columns}\r\n            data={salaryList}\r\n            pagination\r\n            expandableRows\r\n            expandableRowsComponent={ExpandedComponent}\r\n          \r\n        />\r\n          </main>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Salary_list;","C:\\Users\\User\\Desktop\\emp new\\EmployeeManagement\\New folder\\client\\src\\Mycomponent\\common\\nav.js",["40","41","42"],[],"import React from \"react\";\r\nimport { Navigate, Route, Routes } from \"react-router-dom\";\r\n\r\nimport Salary_list from \"../salary\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport Dashboard from \"../dashboard\";\r\n\r\n\r\nfunction Navv(props) {\r\n\r\n  return (\r\n    <div>\r\n      <Routes>\r\n\r\n<>\r\n\r\n<Route path=\"/EmployeeManagement/\" element={<Dashboard/>} />\r\n     \r\n      <Route path=\"/EmployeeManagement/Salary_list\" element={<Salary_list />} />\r\n\r\n\r\n</>\r\n\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navv;","C:\\Users\\User\\Desktop\\emp new\\EmployeeManagement\\New folder\\client\\src\\Mycomponent\\dashboard.js",["43"],[],"import React,{useEffect, useState, useMemo } from 'react';\r\nimport Axios from 'axios';\r\n\r\nconst Dashboard = () => {\r\n    const [employeeList, setEmployeeList] = useState([]);\r\n    const getEmployees = () => {\r\n        Axios.get(\"https://apnaorganicstore.in/index/employees\").then((response) => {\r\n          setEmployeeList(response.data);\r\n          \r\n        });\r\n      };\r\n      useEffect(() => {\r\n        getEmployees();\r\n      },[]);\r\n    return (\r\n        <div>\r\n        {(employeeList || []).map((data) => {\r\n            return (\r\n                <p>{data.staff_name}</p>\r\n\r\n            )\r\n\r\n        })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n",{"ruleId":"44","severity":1,"message":"45","line":3,"column":10,"nodeType":"46","messageId":"47","endLine":3,"endColumn":13},{"ruleId":"44","severity":1,"message":"48","line":24,"column":10,"nodeType":"46","messageId":"47","endLine":24,"endColumn":22},{"ruleId":"44","severity":1,"message":"49","line":24,"column":24,"nodeType":"46","messageId":"47","endLine":24,"endColumn":39},{"ruleId":"44","severity":1,"message":"50","line":50,"column":7,"nodeType":"46","messageId":"47","endLine":50,"endColumn":18},{"ruleId":"51","severity":1,"message":"52","line":67,"column":6,"nodeType":"53","endLine":67,"endColumn":19,"suggestions":"54"},{"ruleId":"44","severity":1,"message":"55","line":2,"column":10,"nodeType":"46","messageId":"47","endLine":2,"endColumn":18},{"ruleId":"44","severity":1,"message":"56","line":6,"column":10,"nodeType":"46","messageId":"47","endLine":6,"endColumn":21},{"ruleId":"57","severity":1,"message":"58","line":21,"column":62,"nodeType":"59","messageId":"60","endLine":21,"endColumn":77},{"ruleId":"44","severity":1,"message":"61","line":1,"column":36,"nodeType":"46","messageId":"47","endLine":1,"endColumn":43},"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'employeeList' is assigned a value but never used.","'setEmployeeList' is assigned a value but never used.","'momentmonth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEmployees'. Either include it or remove the dependency array.","ArrayExpression",["62"],"'Navigate' is defined but never used.","'useNavigate' is defined but never used.","react/jsx-pascal-case","Imported JSX component Salary_list must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'useMemo' is defined but never used.",{"desc":"63","fix":"64"},"Update the dependencies array to be: [attendmonth, getEmployees]",{"range":"65","text":"66"},[2020,2033],"[attendmonth, getEmployees]"]